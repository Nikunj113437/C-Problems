class Solution {
public:
    int searchHelper(vector<vector<int>>&matrix,int si,int ei,int target){
        int rows=matrix.size();
        int cols=matrix[0].size();
        while(si<=ei){
            int mid=(si+ei)/2;
            int i=mid/cols;     //i represent row of mid element
            int j=mid%cols;     //j represent col of mid element
                        
            if(matrix[i][j]==target)   return 1;
            if(matrix[i][j]>target)   ei=mid-1;
            else si=mid+1;
        }
        return 0;
    }
    
    
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int rows=matrix.size();
        int cols=matrix[0].size();
        int si=0;
        int ei=rows*cols-1;
        int ans=searchHelper(matrix,si,ei,target);
        if(ans==0)  return false;
        else return true;
    }
};
