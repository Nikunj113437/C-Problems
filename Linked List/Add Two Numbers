/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode* head)
    {
        if(head==NULL)    return 0;
        else return 1+length(head->next);
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1==NULL)   return l2;
        if(l2==NULL)   return l1;
        int n1=length(l1);
        int n2=length(l2);
        ListNode* temp1=l1;
        ListNode* temp2=l2;
        ListNode* helperLL=new ListNode(0);
        ListNode* finalLL=helperLL;
        int carry=0;
        if(n1<=n2)
        {
            while(temp1!=NULL)
            {
                int sum=temp1->val+temp2->val+carry;
                if(sum>9){
                    carry=sum/10;
                    sum=sum%10;
                }
                else{
                    carry=0;
                }
                ListNode* temp=new ListNode(sum);
                    helperLL->next=temp;
                    helperLL=helperLL->next;
                    temp1=temp1->next;
                    temp2=temp2->next;
            }
            while(temp2!=NULL){
                int sum=temp2->val+carry;
                if(sum>9){
                    carry=sum/10;
                    sum=sum%10;
                }
                else{
                    carry=0;
                }
                ListNode* temp=new ListNode(sum);
                    helperLL->next=temp;
                    helperLL=helperLL->next;
                    temp2=temp2->next;
            }
            if(carry>0){
                ListNode* temp=new ListNode(carry);
                helperLL->next=temp;
                helperLL=helperLL->next;
            }
        }
        else if(n2<n1){
            while(temp2!=NULL)
            {
                int sum=temp2->val+temp1->val+carry;
                if(sum>9){
                    carry=sum/10;
                    sum=sum%10;
                }
                else{
                    carry=0;
                }
                ListNode* temp=new ListNode(sum);
                    helperLL->next=temp;
                    helperLL=helperLL->next;
                    temp1=temp1->next;
                    temp2=temp2->next;
            }
            while(temp1!=NULL){
                int sum=temp1->val+carry;
                if(sum>9){
                    carry=sum/10;
                    sum=sum%10;
                }
                else{
                    carry=0;
                }
                ListNode* temp=new ListNode(sum);
                    helperLL->next=temp;
                    helperLL=helperLL->next;
                    temp1=temp1->next;
            }
            if(carry>0){
                ListNode* temp=new ListNode(carry);
                helperLL->next=temp;
                helperLL=helperLL->next;
            }
        }
        return finalLL->next;
    }
};
